http://tableless.com.br/tudo-que-voce-queria-saber-sobre-git-e-github-mas-tinha-vergonha-de-perguntar/

PENDENTE - Testar clonar meu projeto meu-site no git da minha maquina




** COMANDOS E CONCEITOS DO GIT** 

17/10 - INICIANDO OS ESTUDOS (CASA) ***************************

- Material em: https://git-scm.com/book/pt-br/v1/Primeiros-passos-No%C3%A7%C3%B5es-B%C3%A1sicas-de-Git
- Armazena snapshots dos arquivos, nÃ£o diffs
- SeÃ§Ãµes do Working Directory (Modificado)Â X Staging Area (Preparado) X Git Directory/Repository (Consolidado)
- Tudo no Git tem seu checksum (valor para verificaÃ§Ã£o de integridade), calculado via HASH
- Quase todas as operaÃ§Ãµes sÃ£o locais (usa recurso ou arquivos armazenados localmente).
- InstalaÃ§Ã£o
- arquivo git config
- git config --global code.editor vim
- git init
- git clone (nao Ã© checkout,ele traz tudo, atÃ© versoes anteriores)
- Cada arquivo em seu diretÃ³rio de trabalho pode estar em um de dois estados:Â monitoradoouÂ nÃ£o monitorado. ArquivosÂ monitoradosÂ sÃ£o arquivos que estavam no Ãºltimo snapshot; podendo estarinalterados,Â modificadosÂ ouÂ selecionados. ArquivosÂ nÃ£o monitoradosÂ sÃ£o todo o restante â€” qualquer arquivo em seu diretÃ³rio de trabalho que nÃ£o estava no Ãºltimo snapshot e tambÃ©m nÃ£o estÃ£o em sua Ã¡rea de seleÃ§Ã£o. Quando um repositÃ³rio Ã© inicialmente clonado, todos os seus arquivos estarÃ£o monitorados e inalterados porque vocÃª simplesmente os obteve e ainda nÃ£o os editou.
- git add -> mantem selecionado para commit aquela versao do arquivo. Se houver mudanÃ§a, necessario novo add antes de commitar
- git status -> Changes to be committed X Changes not staged to be committed
- arquivoÂ .gitignore -> contem extensÃµes que devem ser ignoradas pelo commit (ex. .o)
- git diff -> compara o diretorio de trabalho com a Ã¡rea de seleÃ§ao. Mostra as mudanÃ§as que foram feitas e ainda nÃ£o foram selecionadas.
- git diff --staged Â ou cached -> compara mudanÃ§as selecionadas X Ãºltimo commit
        p.s. se ainda nÃ£o selecionei os arquivos (add) nÃ£o consigo fazer diff...
- git commit
        Resultado: [master 0987ca0] Este eh o commit teste da paula. 23h50.
        master Ã© a branch que recebeu o commit
        0987ca0 Ã© oÂ checksum SHA-1 que o comit recebeu
- git commit - v -> mostra no editor as alteraÃ§Ãµes que foram feitas (diff)
- $ git commit -m "Fazendo commit com a opcao -m, que permite escrever comentario sem entrar no editor de texto"
- $ git commit -a -m "commit sem passar pela area de selecao. VAi de modified direto para comitado" -> nao precisa usar o add
- $ git rm arquivoApagar.txt -> coloca a delecao na area de selecao
- $ git rm --cached readme.txt -> apaga da Ã¡rea de selecao mas mantem no meu local

Parei em "movendo arquivos":
https://git-scm.com/book/pt-br/v1/Git-Essencial-Gravando-Altera%C3%A7%C3%B5es-no-Reposit%C3%B3rio


18/10 - GIT TUTORIAL ONLINE (TRABALHO) ***************************

- Git Tutorial - Try: https://try.github.io/levels/1/challenges/19
- git log => 
- git remote => Â RepositÃ³rios remotos sÃ£o versÃµes do seu projeto que estÃ£o hospedados na Internet ou em uma rede em algum lugar. VocÃª pode ter vÃ¡rios deles, geralmente cada um Ã© somente leitura ou leitura/escrita pra vocÃª. Colaborar com outros envolve gerenciar esses repositÃ³rios remotos e fazer o push e pull de dados neles quando vocÃª precisa compartilhar trabalho. 
- git remote add => To push our localÂ repoÂ to the GitHub server we'll need to add a remote repository. 
- git push => empurra para o repositÃ³rio remoto os seus commits, ou seja, envia as mudanÃ§as locais para o repositÃ³rio origin no Git Hub
		The name of our remote isÂ originÂ and the default local branch name isÂ master.Â  
- git push -u origin master => memoriza o repositorio (origin e branch). No prÃ³ximo push nÃ£o preciso informar
- git pull origin master => traz as mudanÃ§as do repositorio remoto para o local (working directory). Ex. Fiz o push e algum jÃ¡ fez o pull, editou, e fez push denovo. Agora o arquivo estÃ¡ alterado.
	No resultado mostra os arquivos alterados / inseridos
- git diff HEAD => mostra as diferenÃ§as entre o Ãºltimo commit e o que estÃ¡ no seu working directory neste momento. (vc commita rapidamente estas mudanÃ§as se adicionar -a ao commit)
- Branches => copias em que os desenvolvedores atuam e fazem commit ao desenvolver features ou arrumar bugs. Ao terminar os trababalho eles podem fazer merge destas branches com a principal, a master.
- git branch clean_up  => cria-se uma branch

Parei em: https://try.github.io/levels/1/challenges/19


18/10 - SOURCE TREE E CRIANDO CONTA NO GIT HUB (CASA) ***********************

- SOURCE TREE: ferramenta que provÃª uma interface grÃ¡fica para repositÃ³rios do GIT. DisponÃ­vel para Windows ou Mac.
- GIT HUB: serviÃ§o web de hospedagem compartilhada para projetos que usam o controle de versionamento GIT. NÃ£o precisa instalar pois Ã© um serviÃ§o, basta criar uma conta.
- CONTA NO GIT HUB:  PAULACASTRO100


19/10 - CONTINUANDO OS ESTUDOS (TRABALHO) ***************************

- Material: http://tableless.com.br/tudo-que-voce-queria-saber-sobre-git-e-github-mas-tinha-vergonha-de-perguntar/
- Git Lab: Gerenciador de repositÃ³rios do Git como o Git Hub, mas usando servidores prÃ³prios, nÃ£o operados pelo Git Hub
- Git X Git Hub X Git Lab
	- Git (controle de versÃ£o) 
	- Git Hub (compartilhar projetos do GIT via web) 
	- Git Lab (compartilhar projetos GIT mas em servidores prÃ³prios, nÃ£o os operados pelo Git HUb)

ContinuaÃ§Ã£o:
- $ git branch clean-up => cria uma branch chamada clean_up
- $ git branch => mostra as branches locais
- $ git checkout clean-up => muda para a branch clean-up
- $ git rm '*.txt' => remove da branch vigente todos os arquivos txt (mesmo que estejam dentro de outros diretorios)
	Ã‰ o "contrario" do add (ainda nao houve commit)
	Resultado:
	rm 'blue_octocat.txt'
	rm 'octocat.txt'
	rm 'octofamily/baby_octocat.txt'
	rm 'octofamily/momma_octocat.txt'
	rm 'red_octocat.txt'
- $ git commit 	-m "Todos os cats foram removidos" => confirma a remoÃ§ao acima fazendo o commit
	Resultado:
	[clean_up 018b4e4] Todos os cats foram removidos
 	5 files changed, 5 deletions(-)
 	delete mode 100644 blue_octocat.txt
 	delete mode 100644 octocat.txt
 	delete mode 100644 octofamily/baby_octocat.txt
 	delete mode 100644 octofamily/momma_octocat.txt
 	delete mode 100644 red_octocat.txt
- $ git checkout master => retorna para a branch master (que ainda possui os arquivos)
 	Resultado:
	Switched to branch 'master'
- $ git merge clean_up => faz o merge das mudanÃ§as da branch clean_up com a branch atual (master).
	Resultado: deleta arquivos tambÃ©m da branch master
	Updating 3852b4d..ec6888b
	Fast-forward
 	blue_octocat.txt             |    1 -
 	octocat.txt                  |    1 -
 	octofamily/baby_octocat.txt  |    1 -
 	octofamily/momma_octocat.txt |    1 -
 	red_octocat.txt              |    1 -
 	5 files changed, 5 deletions(-)
 	delete mode 100644 blue_octocat.txt
 	delete mode 100644 octocat.txt
 	delete mode 100644 octofamily/baby_octocat.txt
 	delete mode 100644 octofamily/momma_octocat.txt
 	delete mode 100644 red_octocat.txt
 - $ git branch -d clean_up => Deleta uma branch (Agora que jÃ¡ fiz o merge de clean_up com a master, nÃ£o preciso mais da branch clean_up...)
 	Resultado:
	Deleted branch clean_up (was ec6888b).
- $ git push => coloca tudo oq que foi feito no repositÃ³rio remoto 
	Resultado:
	To https://github.com/try-git/try_git.git
   	3e70b0f..c7b8ff4  master -> master
(fim do curso https://try.github.io/levels/1/challenges/1)

Manual do GIT: https://git-scm.com/book/en/v2
TODO:
( ) Testar configurar o Git e clonar meu projeto estudos-devops
	http://tableless.com.br/tudo-que-voce-queria-saber-sobre-git-e-github-mas-tinha-vergonha-de-perguntar/


